{
  "name": "Blablanet",
  "tagline": "BlaBlaNet Social Network Source Code",
  "body": "BlaBlaNet- Social Network Kit\r\n===========================\r\n\r\n[![Build Status](https://geditlab.com/blablanet/BlaBlanet)]\r\n\r\nBlaBlaNet is a feature rich and highly flexible OpenSource Social Network Kit written in PHP.\r\n\r\nIt's perfect for individual:\r\n- Social Intranets\r\n- Enterprise Social Networks\r\n- Private Social Networks\r\n\r\nMore information:\r\n- [Homepage & Demo](https://blablanet.com)\r\n- [Documentation & Class Reference](https://blablanet.com/help/develop)\r\n- [Licence](https://github.com/BlaBlaNet/BlaBlaNet/blob/master/LICENSE)\r\n\r\n# BlaBlaNet-Social-Network install:\r\nBaBlaNet Social Network is a decentralized Social Network with new improvements and advance add-ons \r\nYou can BlaBlaNet Social Network Working in https://blablanet.com\r\n\r\n1. Requirements\r\n    - Apache with mod-rewrite enabled and \"AllowOverride All\" so you can use a \r\n    local .htaccess file. Some folks have successfully used nginx and lighttpd.\r\n\tExample config scripts are available for these platforms in doc/install.\r\n\tApache and nginx have the most support. \r\n\r\n    - PHP 5.5 or later. \r\n\r\n    - PHP *command line* access with register_argc_argv set to true in the \r\n    php.ini file - and with no hosting provider restrictions on the use of \r\n    exec() and proc_open().\r\n\r\n    - curl, gd (with at least jpeg and png support), mysqli, mbstring, xml,\r\n    and openssl extensions. The imagick extension MAY be used instead of gd,\r\n\tbut is not required and MAY also be disabled via configuration option. \r\n\r\n    - some form of email server or email gateway such that PHP mail() works.\r\n\r\n    - Mysql 5.x or MariaDB or postgres database server.\r\n    \r\n    - ability to schedule jobs with cron.\r\n\r\n    - Installation into a top-level domain or sub-domain (without a \r\n    directory/path component in the URL) is REQUIRED.\r\n\r\n2. Unpack the BlaBlaNet files into the root of your web server document area.\r\n    \r\nYou can download last release front: https://github.com/BlaBlaNet/BlaBlaNet/releases\r\n\r\nUnzip in a folder and go to Point 2A and continue the install There\r\n\r\nIf you like to use GIt install GIT first in your server\r\n\r\nThe stable Version is in :\r\n         \r\n        git clone https://github.com/BlaBlaNet/BlaBlaNet.git\r\n\r\nThe Developer Testing Versions is in Geditlab there also other versions not public only \r\nfor developers a working in mayor features :\r\n        \r\n        git clone https://geditlab.com/blablanet/BlaBlanet\r\n\r\n    - and then you can pick up the latest changes at any time with\r\n\r\n        git pull\r\n\r\n    - make sure folders *store/[data]/smarty3* and *store* exist and are \r\n    writable by the webserver\r\n    \r\n    - If you have all the files with user www-data normally will be fine you can do:\r\n\r\n      chmod -R www-data:www-data BlablanetNodeNAme \"or folder name\"\r\n\r\n   if fail the easy but not recomend way is:\r\n\r\n        chmod -R 777 store\r\n\r\n        [This permission (777) is very dangerous and if you have sufficient\r\n        privilege and knowledge you should make these directories writeable\r\n        only by the webserver and, if different, the user that will run the\r\n        cron job (see below). In many shared hosting environments this may be\r\n        difficult without opening a trouble ticket with your provider. The\r\n        above permissions will allow the software to work, but are not\r\n        optimal.]\r\n \r\n 2A   - For installing addons front other Repository after finish the Browser Install\r\n\r\n        - First you should be **on** your website folder\r\n\r\n            cd mywebsite\r\n\r\n    - Then you should clone the addon repository (separately). We'll give this repository\r\n         a nickname of 'Bbaddons'. You can pull in other BlaBlanet addons repositories by \r\n         giving them different nicknames. We not Guranty Further Versions be compatible with \r\n         BlaBlaNet Addons.\r\n              \r\n              util/update_addon_repo blablanet\r\n        \r\n        That will update the Main Addons \r\n        \r\n        And for add New Addons:\r\n        \r\n            util/add_addon_repo URL + ADDON NAME + insecure\r\n\r\n    - For keeping the addon tree updated, you should be on your top level website \r\n\t\tdirectory and issue an update command for that repository.\r\n\r\n            cd mywebsite\r\n            util/update_addon_repo blablanet\r\n\r\n\t- Create searchable representations of the online documentation. You may do this any time\r\n\t\tthat the documentation is updated.\r\n\r\n\t\t\tcd mywebsite\r\n\t\t\tutil/importdoc\r\n\r\n\r\n\r\n\r\n3. Create an empty database and note the access details (hostname, username, \r\npassword, database name). The MySQL client libraries will fallback to socket \r\ncommunication if the hostname is 'localhost' and some people have reported\r\nissues with the socket implementation. Use it if your requirements mandate. \r\nOtherwise if the database is served on the local server, use '127.0.0.1' for\r\nthe hostname. If you Use Debian or Ubuntu you can Install or MariaDB 10.01 Sources\r\n########## MARIADB 10.0.1\r\n\r\nRun this command: apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\r\n\r\nAfter: nano /etc/apt/sources.list\r\n\r\nAnd add this line to the end of your sources:\r\n\r\ndeb [arch=amd64,i386] http://blablanet.stream/mariadb/repo/10.1/debian jessie main\r\n\r\nExecute after: apt-get upgrade\r\n\r\nAnd them: apt-get install mariadb-server\r\n\r\n4. If you know in advance that it will be impossible for the web server to \r\nwrite or create files in your web directory, create an empty file called \r\n.htconfig.php and make it writable by the web server.\r\n\r\n5. Visit your website with a web browser and follow the instructions. Please \r\nnote any error messages and correct these before continuing. If you are using\r\nSSL with a known signature authority, use the https: link to your\r\nwebsite. \r\n\r\n6. *If* the automated installation fails for any reason, check the following:\r\n\r\n    - \".htconfig.php\" exists \r\n        If not, edit htconfig.php and change system settings. Rename \r\n    to .htconfig.php\r\n\t-  Database is populated.\r\n        If not, import the contents of \"install/schema_xxxxx.sql\" with phpmyadmin \r\n        or mysql command line (replace 'xxxxx' with your DB type).\r\n\r\n7. At this point visit your website again, and register your personal account. \r\nRegistration errors should all be recoverable automatically. \r\nIf you get any *critical* failure at this point, it generally indicates the\r\ndatabase was not installed correctly. You might wish to move/rename \r\n.htconfig.php to another name and empty (called 'dropping') the database \r\ntables, so that you can start fresh.\r\n\r\nIn order for your account to be given administrator access, it should be the\r\nfirst account created, and the email address provided during registration\r\nmust match the \"administrator email\" address you provided during \r\ninstallation. Otherwise to give an account administrator access,\r\nadd 4096 to the account_roles for that account in the database. \r\n\r\nFor your site security there is no way to provide administrator access\r\nusing web forms. \r\n\r\n****************************************************************************\r\n****************************************************************************\r\n********          THIS NEXT STEP IS IMPORTANT!!!!                ***********\r\n****************************************************************************\r\n****************************************************************************\r\n\r\n8. Set up a cron job or scheduled task to run the Cron manager once every 10-15 \r\nminutes to perform background processing and maintenance. Example:\r\n\r\n\tcd /base/directory; /path/to/php /usr/bin/php GeditLab/Daemon/Master.php Cron\r\n\r\nChange \"/base/directory\", and \"/path/to/php\" as appropriate for your situation.\r\n\r\nIf you are using a Linux server, run \"crontab -e\" and add a line like the \r\none shown, substituting for your unique paths and settings:\r\n\r\n*/10 * * * *\tcd /home/myname/mywebsite; /usr/bin/php GeditLab/Daemon/Master.php Cron\r\n\r\nYou can generally find the location of PHP by executing \"which php\". If you \r\nhave troubles with this section please contact your hosting provider for \r\nassistance. BlaBlaNet will not work correctly if you cannot perform this step.\r\n\r\nYou should also be sure that App::$config['system']['php_path'] is set correctly \r\nin your .htconfig.php file, it should look like (changing it to the correct \r\nPHP location):\r\n\r\nApp::$config['system']['php_path'] = '/usr/local/php55/bin/php';\r\n  \r\n \r\n#####################################################################\r\n\r\n#####################################################################\r\n- Apache processes hanging, using as much CPU as they can\r\n#####################################################################\r\n\r\nThis seems to happen sometimes if you use mpm_prefork and the PHP process\r\nstarted by Apache cannot get database access.\r\n\r\nConsider the following settings:\r\n\r\nIn /etc/apache2/mods-enabled/mpm_prefork.conf (Debian, path and file name\r\nmay vary depending on your OS and distribution), set\r\n\r\n GracefulShutdownTimeout 300\r\n\r\nThis makes sure that Apache processes that are running wild will not do so\r\nforever, but will be killed if they didn't stop five minutes after a\r\nshutdown command was sent to the process.\r\n\r\nIf you expect high load on your server (public servers, e.g.), also make\r\nsure that Apache will not spawn more processes than MySQL will accept\r\nconnections.\r\n\r\nIn the default Debian configuration, in\r\n/etc/apache2/mods-enabled/mpm_prefork.conf the maximum number of workers\r\nis set to 150:\r\n\r\n  MaxRequestWorkers 150\r\n\r\nHowever, in /etc/mysql/my.cnf the maximum number of connection is set to\r\n100:\r\n\r\n max_connections = 100\r\n\r\n150 workers are a lot and probably too much for small servers. However you\r\nset those values, make sure that the number of Apache workers is smaller\r\nthan the number of connections MySQL accepts, leaving some room for other\r\nstuff on your server that might access MySQL, and BlaBlaNet's poller which\r\nneeds MySQL access, too. A good setting for a medium-sized hub might be to\r\nkeep MySQL's max_connections at 100 and set mpm_prefork's\r\nMaxRequestWorkers to 70.\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}